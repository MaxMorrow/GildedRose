// <auto-generated />
using System;
using GildedRose.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GildedRose.API.Migrations
{
    [DbContext(typeof(InventoryContext))]
    [Migration("20181118192510_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GildedRose.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DegradationId");

                    b.Property<int>("MaximumQuality");

                    b.Property<int>("MinimumQuality");

                    b.Property<string>("Name");

                    b.HasKey("CategoryId");

                    b.HasIndex("DegradationId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("GildedRose.Models.Degradation", b =>
                {
                    b.Property<int>("DegradationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HasNoValuePastExpiration");

                    b.Property<int>("Interval");

                    b.Property<int>("Rate");

                    b.Property<int>("Threshold");

                    b.HasKey("DegradationId");

                    b.ToTable("Degradation");
                });

            modelBuilder.Entity("GildedRose.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CurrentDate");

                    b.Property<string>("Name");

                    b.Property<string>("Owner");

                    b.HasKey("InventoryId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("GildedRose.Models.InventoryItem", b =>
                {
                    b.Property<int>("InventoryItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<int>("InventoryId");

                    b.Property<string>("Name");

                    b.Property<DateTime>("PurchasedOn");

                    b.Property<int>("QualityId");

                    b.Property<int>("SellIn");

                    b.HasKey("InventoryItemId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("InventoryId");

                    b.HasIndex("QualityId");

                    b.ToTable("InventoryItem");
                });

            modelBuilder.Entity("GildedRose.Models.Quality", b =>
                {
                    b.Property<int>("QualityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Current");

                    b.Property<int>("Initial");

                    b.HasKey("QualityId");

                    b.ToTable("ItemQuality");
                });

            modelBuilder.Entity("GildedRose.Models.Category", b =>
                {
                    b.HasOne("GildedRose.Models.Degradation", "Degradation")
                        .WithMany()
                        .HasForeignKey("DegradationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GildedRose.Models.InventoryItem", b =>
                {
                    b.HasOne("GildedRose.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GildedRose.Models.Inventory")
                        .WithMany("InventoryItems")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GildedRose.Models.Quality", "Quality")
                        .WithMany()
                        .HasForeignKey("QualityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
